#!/bin/bash
#
# Copyright (c) 2018 University of Utah
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR(S) DISCLAIM ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHORS BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

run() {
    # Check for a clients.txt file with client related configuration.
    if [[ ! -f clients.txt ]]; then
        echo "Missing clients.txt file in the current directory."
        exit -1
    fi
    # The client is using the rate just to wait for Total/rate time.
    pssh -h clients.txt -t 0 -i "cd splinter; sudo ./scripts/run-$extname 250000" | \
    grep --color=always -e SUCCESS -e FAILURE -e Median
}

clean() {
    if [ -z !"$2" ]; then
        echo "Specify the extension name to kill the client"
        exit 1
    fi
    echo "sudo kill -9 `pidof $extname`"
    pssh -h clients.txt -t 0 -i "sudo kill -9 `pidof $extname`"
}

display_help() {
    echo "Usage: $0 {run extname|clean extname |setup flag}" >&2
    exit 1
}

setup() {
    # Check for a clients.txt file with client related configuration.
    if [[ ! -f clients.txt ]]; then
        echo "Missing clients.txt file in the current directory."
        exit -1
    fi

    if [[ ! -f server.txt ]]; then
        echo "Missing server.txt file in the current directory."
        exit -1
    fi

    # Clone the git repository and setup the environment.
    pssh -h server.txt -t 0 -i "git clone https://github.com/utah-scs/splinter.git" &> /dev/null
    pssh -h server.txt -t 0 -i "cd splinter; ./scripts/setup.py --$extname;" &> /dev/null
    pssh -h server.txt -t 0 -i "cd splinter; cat nic_info" > nic_info
    server_pci=$(awk '/^pci/ { print $2; }' < nic_info)
    server_mac=$(awk '/^mac/ { print $2; }' < nic_info)
    rm nic_info
    echo "Server setup completed"

    # Create server.toml file.
    pssh -h server.txt -t 0 -i "cd splinter; cp db/server.toml-example db/server.toml; \
                                 sed -E -i 's/[0-9a-fA-F:]{17}/$server_mac/' db/server.toml; \
                                 sed -E -i 's/0000:04:00.1/$server_pci/' db/server.toml" &> /dev/null
    echo "server.toml created"

    # Clone the git repository and setup the environment.
    pssh -h clients.txt -t 0 -i "git clone https://github.com/utah-scs/splinter.git" &> /dev/null
    pssh -h clients.txt -t 0 -i "cd splinter; ./scripts/setup.py --$extname;" &> /dev/null
    echo "Client setup completed"

    # Create client.toml file.
    pssh -h clients.txt -t 0 -i "cd splinter; \
                                 echo "server_mac: "$server_mac >> nic_info; \
                                 ./scripts/create-client-toml" &> /dev/null
}

if [ $# -ne 2 ]; then
    display_help
    exit -1
fi

extname=$2

case "$1" in
    run)
        run # calling function run()
        ;;
    clean)
        clean # calling function clean()
        ;;
    setup)
        setup # setup --full
        ;;
    *)
        display_help
esac

