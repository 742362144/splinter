#!/bin/bash
#
# Copyright (c) 2018 University of Utah
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR(S) DISCLAIM ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHORS BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# Export DPDK bindings to the current shell.
export LD_LIBRARY_PATH=$(pwd)/net/target/native

cd db

# Check for a TOML file with client related configuration.
if [[ ! -f client.toml ]]; then
    echo "Missing client.toml file (in db directory)."
    exit -1
fi

# Get the "use_invoke" field from the client configuration. The output file
# will be markes with the value of this field, allowing to distinguish between
# experiments run with an invoke based YCSB, and experiments run with a native
# operation based YCSB.
invoke=$(cat client.toml | grep "use_invoke" | awk '{ print $NF }')

# The skew with which tenants are chosen by the client. Each data point in the
# output file is marked with this number.
tenant_skew=$(cat client.toml | grep "tenant_skew" | awk '{ print $NF }')

# The number of tenants requests are being generated for. Each data point in the
# output file is marked with this number.
tenants=(8 16 32 64 128 256 512 1024)

# The number of server cores being stressed by YCSB. Each data point in the
# output file is marked with this number.
cores=$(cat client.toml | grep "server_udp_ports" | awk '{ print $NF }')

# The different request rates that the YCSB client will be configured and run
# with.
rates=(900000 925000 950000 975000 1000000 1025000 1050000 1075000 1100000)

# Header for the output file. Required inorder to plot the results.
echo "Offered 50 99 Thrpt Tenants TSkew Cores" > ../ycsb_invoke_"$invoke".out

# Run YCSB stressing a different number of tenants on the server.
for tenant in ${tenants[@]}
do
    # Configure the client TOML file with the number of tenants to stress.
    sed -i "s/num_tenants = [1-9][0-9]*/num_tenants = $tenant/g" client.toml

    # Run YCSB for each of the above request rates.
    for rate in ${rates[@]}
    do
        echo "rate=$rate, invoke=$invoke, tenants=$tenant, tenant_skew=$tenant_skew, cores=$cores"

        # Configure the client TOML file with the request rate.
        sed -i "s/req_rate = [1-9][0-9]*/req_rate = $rate/g" client.toml

        # Run YCSB, and write out the median, 99th, and throughput.
        RUST_LOG=debug ./target/release/ycsb 2>&1 | grep "Median(ns)" | \
                awk "{ print $rate, \$3, \$5, \$7, $tenant, $tenant_skew, $cores }" \
                >> ../ycsb_invoke_"$invoke".out
    done
done

exit 0
